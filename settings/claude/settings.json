{
  "model": "opusplan",
  "statusLine": {
    "type": "command",
    "command": "input=$(cat); printf \"\\033[2m%s@%s \\033[36m%s\\033[0m \\033[2m[%s]\\033[0m\" \"$(whoami)\" \"$(hostname -s)\" \"$(echo \"$input\" | jq -r '.workspace.current_dir | gsub(\".*/\"; \"\")' 2>/dev/null || basename \"$(echo \"$input\" | jq -r '.workspace.current_dir')\" 2>/dev/null || echo \"unknown\")\" \"$(echo \"$input\" | jq -r '.model.display_name' 2>/dev/null || echo \"Claude\")\""
  },
  "permissions": {
    "allow": [
      "Bash(ast-grep:*)",
      "Bash(cat:*)",
      "Bash(claude -p:*)",
      "Bash(difft:*)",
      "Bash(env)",
      "Bash(export:*)",
      "Bash(fd:*)",
      "Bash(find:*)",
      "Bash(fzf:*)",
      "Bash(gh pr diff:*)",
      "Bash(gh pr list:*)",
      "Bash(gh pr view:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(git add:*)",
      "Bash(git diff:*)",
      "Bash(git log:*)",
      "Bash(git status:*)",
      "Bash(head:*)",
      "Bash(jq:*)",
      "Bash(ls:*)",
      "Bash(mypy:*)",
      "Bash(pixi:*)",
      "Bash(pixi run pre-commit:*)",
      "Bash(pixi run pytest:*)",
      "Bash(pixi run python:*)",
      "Bash(pixi search:*)",
      "Bash(pre-commit:*)",
      "Bash(pytest:*)",
      "Bash(readlink:*)",
      "Bash(rg:*)",
      "Bash(ruff:*)",
      "Bash(shellcheck:*)",
      "Bash(shfmt:*)",
      "Bash(test:*)",
      "Bash(tree:*)",
      "Bash(uv add:*)",
      "Bash(uv remove:*)",
      "Bash(uv run pre-commit:*)",
      "Bash(uv run pytest:*)",
      "Bash(uv run python:*)",
      "Bash(wait)",
      "Bash(yq:*)",
      "mcp__claude-code__Task",
      "mcp__ide__getDiagnostics",
      "mcp__local-semantic-memory__archive",
      "mcp__local-semantic-memory__create_embedding",
      "mcp__local-semantic-memory__get_embedding_info",
      "mcp__local-semantic-memory__get_embeddings_batch",
      "mcp__local-semantic-memory__get_memory_embedding",
      "mcp__local-semantic-memory__hello",
      "mcp__local-semantic-memory__list_categories",
      "mcp__local-semantic-memory__list_recent",
      "mcp__local-semantic-memory__list_tags",
      "mcp__local-semantic-memory__recall",
      "mcp__local-semantic-memory__remember",
      "mcp__local-semantic-memory__remember_batch",
      "mcp__local-semantic-memory__restore",
      "mcp__local-semantic-memory__search_content",
      "mcp__local-semantic-memory__search_semantic",
      "mcp__local-semantic-memory__search_similar",
      "mcp__local-semantic-memory__semantic_search_stats",
      "mcp__local-semantic-memory__stats",
      "mcp__local-semantic-memory__update",
      "mcp__local-semantic-memory__update_batch",
      "Read(//Users/jacob.hurlburt/Library/Logs/Claude/**)",
      "Read(//Users/jacob.hurlburt/dotfiles/settings/claude/**)",
      "Read(//Users/jacob.hurlburt/repos/**)",
      "WebFetch(domain:github.com)"
    ],
    "deny": [
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(sed:*)",
      "Bash(awk:*)",
      "mcp__claude-code__Bash",
      "mcp__claude-code__Edit",
      "mcp__claude-code__Glob",
      "mcp__claude-code__Grep",
      "mcp__claude-code__MultiEdit",
      "mcp__claude-code__NotebookEdit",
      "mcp__claude-code__Read",
      "mcp__claude-code__TodoWrite",
      "mcp__claude-code__WebFetch",
      "mcp__claude-code__WebSearch",
      "mcp__claude-code__Write"
    ],
    "ask": ["Bash(pixi global:*)", "Bash(git commit:*)", "Bash(git reset:*)"]
  },
  "outputStyle": "Explanatory",
  "hooks": {
    "PostToolUse": [
      {
        "matcher": "Write|Edit|MultiEdit",
        "hooks": [
          {
            "type": "command",
            "command": "jq -r '.tool_input.file_path // empty' | rg -q . && { ls -la .pre-commit-config.yaml >/dev/null 2>&1 && { prek run --all-files 2>&1; } || { ruff check --fix 2>&1 && ruff format 2>&1; }; } || exit 2"
          }
        ]
      }
    ]
  }
}
